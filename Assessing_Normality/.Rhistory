install.packages("swirl")
install.packages("swirlify")
install.packages("devtools")
devtools::install_github(c("swirldev/swirl","swirldev/swirlify"))
swirl()
require(swirl)
swirl()
c(0.5,55,-10,6)
?c
c(.5,55,-10,6)
num_vect <- c(.5,55,-10,6)
tf <- num_vect<1
tf
swirl()
x <- rnorm(10)
y <- 2*rnorm(10)
var.test(x,y)
x <- rnorm(30)
y <- 2*rnorm(30)
var.test(x,y)
wormdata
worms <- c(18,43,28,50,16,32,13,35,38,33,6,7,40,54,26,63,21,37,39,23,48,58,28,39);
treated <- c(rep("treated",12),rep("untreated",12));
wormdata <- data.frame(worms,treated)
view(wormdata)
wormdata
treated_sheep <-worms[treated=="treated"]
untreated_sheep <-worms[treated=="untreated"]
wormcounts <- data.frame(treated_sheep,untreated_sheep)
library(knitr)
kable(wormcounts)
?kable
kable(head(wormcounts))
clc
library("swirl")
rm(list=ls())
swirl()
install_from_swirl("Exploratory_Data_Analysis")
swirl()
?InstallCourses
install_course_directory(file.choose())
install_course(file.choose())
install_course(file.choose())
install_course_zip(file.choose())
swirl()
uninstall_all_courses
uninstall_all_courses()
install_course_zip(file.choose())
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1:20
1:2:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with my_seq)
seq(along.with = my_seq)
?seq_along
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),10)
rep(c(0,1,2),each-10)
rep(c(0,1,2),each=10)
-->
source('~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/class_material/lessons/Lesson_03_normal_distributions/how_many.R')
?
for
?for
??loop
qpois(.95,100*.07)
qpois(.95,07*c(100,200,300))
?qpois
qpois(.95,c(7,10))
source('~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/class_material/lessons/Lesson_03_normal_distributions/how_many.R')
source('~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/class_material/lessons/Lesson_03_normal_distributions/how_many.R')
?plot
source('~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/class_material/lessons/Lesson_03_normal_distributions/how_many.R')
qpois(.95,p*100)
source('~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/class_material/lessons/Lesson_03_normal_distributions/how_many.R')
2000^(1/3)
source('~/.active-rstudio-document')
?plot
source('~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/class_material/lessons/Lesson_03_normal_distributions/how_many.R')
source('~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/class_material/lessons/Lesson_03_normal_distributions/how_many.R')
source('~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/class_material/lessons/Lesson_03_normal_distributions/how_many.R')
source('~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/class_material/lessons/Lesson_03_normal_distributions/how_many.R')
.0027*100
1/370
p
500/143
source('~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/class_material/lessons/Lesson_03_normal_distributions/how_many.R')
source('~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/class_material/lessons/Lesson_03_normal_distributions/how_many.R')
source('~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/class_material/lessons/Lesson_03_normal_distributions/how_many.R')
source('~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/class_material/lessons/Lesson_03_normal_distributions/how_many.R')
numout
numout[40]
numout[41]
numout[42]
numout[43]
numout[44]
numout[45]
numout[46]
numout[47]
n[47]
lam[47]
2/lam[47]
numout[100]
plot(n,numout/lam)
numout[300]/lam[300]
numout[120]
numout[118]
numout[110]
numout[112]
numout[114]
numout[113]
n[113]
numout[47]
numout[46]
n[47]
numout[200]
numout[199
]
numout[194]
numout[190]
numout[191]
numout[192]
n[191]
n[36]
numout[36]
ppois(1,)
rhchisq(10,1)
rchisq(10,1)
qqnorm(rchisq(100,1))
qqnorm(rchisq(100,2))
qqnorm(rchisq(100,3))
qqnorm(rchisq(100,4))
x <- rchisq(100,4)
qqnorm(x)
qqline(x)
qqnorm(-x)
qqline(-x)
xunif <- runif(100)
qqnorm(xunif)
qqline(xunif)
xt <- rt(100,2)
qqnorm(xt)
rcauchy?
?rcauchy
xcauchy <- rcauchy(100)
qqnorm(xcauchy)
xcauchy <- rcauchy(100)
qqnorm(xcauchy)
xt <- rt(100,4)
qqnorm(xt)
xt <- rt(100,4)
qqnorm(xt)
qline(xt)
qqline(xt)
xt <- rt(100,2)
qqnorm(xt)
hist(xt,prob=TRUE)
```
(bottom panel note:  Read Section 3.2.1, pages 128-132 in the 2nd Edtion of OpenIntro Statistics for a good discussion of normal probablity plots)
x <- c(2,4,7,7,8,11,13,15,16,18)
qqnorm(x)
x <- c(2,4,7,7,8,11,13,15,16,20)
qqnorm(x)
x <- c(2,4,7,7,8,11,13,15,17,20)
qqnorm(x)
quantiles(x,.15)
quantile(x,.15)
quantile(x,.10)
quantile(x,.10,type=5)
quantile(x,.15,type=5)
quantile(x,.25,type=5)
quantile(x,.35,type=5)
?
q
?ppoints
ppoints(10)
ppoints(10,.5)
qnorm(ppoints(10,.5))
round(qnorm(ppoints(10,.5)),2)
x
x
plot(x)
plot(x,rep(0,10))
x <- c(2, 4, 7, 7, 8, 11, 13, 15, 17, 20)
?seq
p <- seq(.05,.95,.1)
p
x
plot(p,x)
y2 <- sort(round(rnorm(10,70,10)))
y2
qqnorm(y2)
y2 <- sort(round(rnorm(10,70,10)))
qqnorm(y2)
y2 <- sort(round(rnorm(10,70,10)))
qqnorm(y2)
y2 <- sort(round(rnorm(10,70,10)))
qqnorm(y2)
y2
mean(y2)
y <- y2
y
length(y)
p <- seq(.5,.95,.1)
p
p <- seq(.05,.95,.1)
p
qnorm(.05)
qnorm(.15)
z_expected <- qnorm(p)
z_expected
plot(z_expected,y)
qqnorm(y)
y
p
p <- seq(.05,.95,.1)
p
qnorm(.05)
qnorm(.15)
z <- qnorm(p)
z
plot(z,y)
qqnorm(y)
qqline(y)
qnorm(seq(.1,.9,.1))
x <- seq(-3.5,3.5,200)
plot(x,dnorm(x))
x
x <- seq(-3.5,3.5,200)
x
x <- seq(-3.5,3.5,200)
?seq
seq(1,10,1)
seq(-10,10,20)
seq(-10,10,1)
x <- seq(-3.5,3.5,length=200)
plot(x,dnorm(x))
plot(x,dnorm(x),type="l")
?line
?abline
plot(x,dnorm(x),type="l")
abline(v=qnorm(seq(.1,.9,.1)))
q <- qnorm(seq(.1,.9,.1))
q
pnrom(q[1])
pnorm(q[1])
pnrom(q[2])
?plot
?abline
?lines
q <- qnorm(seq(.1,.9,.1))
q
dq = dnorm(q)
plot(x,dnorm(x),type="l")
lines(c(-3.5,3.5),c(0,0))
lines(c(q[1],q[1]),c(0,dq[1]))
lines(c(q[2],q[2]),c(0,dq[2]))
source('~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/class_material/lessons/Lesson_03_normal_distributions/normal_prob_ex.R')
z
# the data
y <- c(45, 46, 56, 65, 65, 69, 70, 75, 77, 88)
# the observed z-scores
zobs <- (y-mean(y))/sd(y)
zobs
n <- length(y)
pctl <- ((1:n)-.5)/n
pctl
library(swirl)
swirl()
install_course_zip()
install_course_zip(file.choose())
install_course_zip(file.choose())
swirl()
install_course_zip(file.choose())
swirlify()
library(swirlify)
swirlify()
set_lesson
?set_lesson
set_lesson()
testit()
?pnorm
pnorm(1.3)
pnorm(17,mean=20,sd=2)
pnorm(21,mean=20,sd=2,lower.tail=FALSE)
1-pnorm(21,mean=20,sd=2)
skip()
?t.test
require(DS705datga)
require(DS705data)
data(HealthExam)
h <- HealthExam
heightM <- h$Height[h$Sex=="M"]
t.test(heightM)
t.test(heightM,var.equal = TRUE, conf.level = 0.99)
t.test(heightM, conf.level = 0.99)
?par
# make the plots reproducible by setting the seed
?hist
?par
?par
par(mar=(c(4,4,2,0)),yaxs="i",bty="l",xaxs="i",yaxt="n",xaxp=c(60,80,3))
?hist
require(DS705data);
data(HealthExam)
h<- HealthExam$Height[HealthExam$Sex=="M"]
HealthExamMen <- HealthExam[HealthExam$Sex=="M",]
par(mar=(c(4,4,2,1)),yaxs="i",bty="l",xaxs="i",yaxt="n")
hist(h,main="Heights of 40 men",xlab="inches",prob=TRUE,xlim=c(60,80),ylab="")
xbar <- round(mean(h),digits=2)
s <- round(sd(h),digits=2)
(max(h))
(max(h)-xbar)/s
.libPaths()
template: ../beamer169.tex
require(openintro)
data(openintro)
?data
data(package="openintro")
?marioKart
sleep
sleep_wide <- data.frame(
ID=1:10,
group1=sleep$extra[1:10],
gro
up2=sleep$extra[11:20])
sleep_wide <- data.frame(
ID=1:10,
group1=sleep$extra[1:10],
group2=sleep$extra[11:20]
)
sleep_wide
require(car)
?levenetest
?levene.test
?leveneTest
names(sleep)
leveneTest(sleep~group)
leveneTest(sleep,group)
leveneTest(extra~group)
attach(sleep)
leveneTest(extra~group)
detach(sleep)
leveneTest(extra~group,data=sleep)
h
require(DS705data);
data(HealthExam)
h<- HealthExam$Height[HealthExam$Sex=="M"]
xbar <- round(mean(h),digits=2)
s <- round(sd(h),digits=2)
llim <- xbar-3.5*s
ulim <- xbar+3.5*s
h
u <- ppoints(40,.5)
u
plot(u,h)
plot(u,sort(h))
?ppoints
plot(u,sort(h),xlab="u",ylab='Q(u), inches',main="")
?
grid
plot(u,sort(h),xlab="u",ylab='Q(u), inches',main="",grid(nx=5,ny=5))
plot(u,sort(h),xlab="u",ylab='Q(u), inches',main="",grid(nx=5,ny=5))
?par
plot(u,sort(h),xlab="u",ylab='Q(u), inches',main="",grid(nx=5,ny=5),xaxs="i",yaxs="i")
?grid
plot(u,sort(h),xlab="u",ylab='Q(u), inches',main="",grid(nx=5,ny=5,col="gray"),xaxs="i",yaxs="i")
?grid
plot(u,sort(h),xlab="u",ylab='Q(u), inches',main="",grid(nx=5,ny=5,col="gray"),xaxs="i",yaxs="i",xlim=c(0,1))
plot(u,sort(h),xlab="u",ylab='Q(u), inches',main="",grid(nx=5,ny=5,col="gray"),xaxs="i",yaxs="i",xlim=c(0,1),ylim=c(62,78))
plot(u,sort(h),xlab="u",ylab='Q(u), inches',main="",grid(nx=5,ny=5,col="gray"),xaxs="i",yaxs="i",xlim=c(0,1),ylim=c(60,80))
plot(u,sort(h),xlab="u",ylab='Q(u), inches',main="",grid(nx=5,ny=4,col="gray"),xaxs="i",yaxs="i",xlim=c(0,1),ylim=c(60,80))
swirl()
require(swirl)
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance",main="My PLot")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance",main="My Plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot")
plot(cars, sub = "My Plot Subtitle")
?par
plot(cars,col=2)
plot(cars,col=2,xlim=c(10,15))
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
data(mtcars)
play()
head(mtcars)
dim(mtcars)
names(mtcars)
nxt()
?boxplot()
?boxplot
boxplot(mpg~cyl,data=mtcars)
hist(mtcars$mpg)
bye()
?pandas
require(pandas)
?pander
install.packages("xtable")
library("xtable", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
?xtable
cars
xtable(cars)
data(HealthExam)
xtable(HealthExam[1:6,])
setwd("~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/misc_data_files/ott_6e_csv_data_files/CH03")
homes <- read.csv('ex3-11.txt')
homes
names(homes)
names(homes) <- c('State','1985','1996','2002')
names(homes)
h1 <- homes$1985
h1 <- homes[,2]
h1
h2 <- homes[,3]
h3 <- homes[,4]
h1lab <- rep("1985",1)
h1lab <- rep("1985",51)
h2lab <- rep("1996",51)
h3lab <- rep("2002",51)
h1lab <- rep("year1985",51)
h2lab <- rep("year1996",51)
h3lab <- rep("year2002",51)
homePercents <- data.frame(c(h1,h2,h3),c(h1lab,h2lab,h3lab))
homePercents
names(HomePercents)
names(homePercents)
names(homePercents) <- c("PercentOwned","Year")
names(homePercents)
boxplot(homePercents$PercentOwned~homePercents$Year)
write.csv(homePercents,file="homes.csv",row.names=F)
setwd("~/Google Drive/Gdrive_snap_May_15/DS705 - Resources/misc_data_files/ott_6e_csv_data_files/CH03")
setwd("~/Google Drive/Gdrive_snap_May_15/MS Data Science/DS 705 CEOEL Folder/class_material/lessons/week 01")
write.csv(homePercents,file="homes.csv",row.names=F)
require(swirlify)
new_lesson()
cd ..
setwd("~/Google Drive/Gdrive_snap_May_15/MS Data Science/DS 705 CEOEL Folder/class_material/swirl_lessons/DS705/DS705_week_01/Assessing_Normality")
?new_lesson
new_lesson("Descriptive Statistics","DS705")
